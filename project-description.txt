API DEVELOPMENT PROJECT

GENERAL

        An OPTIONAL project integrates concepts presented in the
        classes. The project is presented personally at Project
        Presentation day. See timetable at homepage.

        The final course grade is the sum of homework grade and
        project grade.

        Project cannot be done as a group work.

RETURNED FILES

	Project files are returned in project/ directory. See homepage.

PRESENTATION INSTRUCTIONS

	1. About 10 minutes
	2. Powepoint
	   + Project overveiew
	   + Used technologies, challenges, solutions, timetable
	   + Summary
	3. Demo (short)
	4. Code (few key explanations)

GRADE +1

        Nodejs project that implements server using:

        - HTTP server
	  + Any.
        - Database:
	  + Relational database SQLite.
        - API:
          + Allows searching information (HTTP GET).
	- Response:
	  + JSON data.

        The project is accepted when the client can send an URL
        request with PARAMETER and the results are returned from the
        database. An example (port number or URL format does not matter):

            curl http://localhost:8000/get?first=john

        => response (in JSON format):

            <...result of API client request>

GRADE +2

        Nodejs project that implements server using:

        - HTTP server:
	  + uses Express framework.
        - Database:
	  + Relational database SQLite.
	  + Must use domain constraint checks.
	  + Must define indexes (other than PK).
        - API:
          + Allows searching information (HTTP GET)
            by using multiple criterias in call,
          + Allows adding information (HTTP POST),
	- Response:
	  + JSON data.
	- Error handling:
          + Proper HTTP status codes for API requests.

GRADE +3

        - HTTP server:
	  + uses Express framework.
        - Database:
	  + Relational database SQLite.
          + uses Sequelize framework: class Model and methods like findAll().
	  + No raw SQL queries.
	  + Must use two tables joined together during API GET call.
        - API:
          + Allows searching information (HTTP GET)
            by using multiple criterias in call,
          + Allows adding information (HTTP POST).
          + Allows modifying information (HTTP UPDATE).
	- Response:
	  + JSON data.
	- Error handling:
          + Proper HTTP status codes for API requests.

END OF FILE